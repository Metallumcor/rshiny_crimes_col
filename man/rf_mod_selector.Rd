% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rf_mod_selector.R
\encoding{UTF-8}
\name{rf_mod_selector}
\alias{rf_mod_selector}
\title{Ajuste ensambles para clasificación - Random Forest.}
\usage{
rf_mod_selector(split_out, scaled = FALSE, quiet = FALSE, tuning = TRUE, ...)
}
\arguments{
\item{split_out}{La partición entrenamiento/validación/prueba de los datos.
Las columnas de factores deben estar en su correspondiente formato.}

\item{scaled}{¿Los datos están escalados? De usar falso se realizará
su escalamiento. *Nota:* El escalamiento se realiza usando la
información disponible en entrenamiento.}

\item{quiet}{Lógico. Callar las salidas en consola de los modelos.}

\item{tuning}{Lógico. Retornar o no el mejor modelo posible.}

\item{...}{argumentos adicionales pasados a \code{randomForest} o
\code{tuneRF}. Consultar la función \code{\link[randomForest]{randomForest}}
para mayor información.}
}
\value{
Una lista que incluye el mejor ensamble Random Forest,
    junto a la **accuracy** reportada en entrenamiento y validación
}
\description{
Mediante la rutina \code{randomForest} de su paquete homónimo
    se realiza ajuste del ensamble con sus parámetros por defecto, aunque
    es posible que estos sean modificados mediante el ingreso de los
    argumentos necesarios.

    Usando \code{tuneRF} se produce de forma alternativa un mejor modelo
    donde se explora la cantidad de variables incluidas en los modelos
    base del ensamble, de acuerdo al error fuera de muestra del bootstrap
    (OOB)

    El objeto resultante contiene el ajuste de \code{randomForest}, más
    las **accuracy** del ensamble en entrenamiento y validación.

    *Nota* en versiones futuras se incluirá ajuste por CV para otros
    parámetros (usando \code{caret}, por ejemplo)

    TODO: Ejemplos
}
