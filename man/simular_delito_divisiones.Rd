% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simular_delito_divisiones.R
\encoding{UTF-8}
\name{simular_delito_divisiones}
\alias{simular_delito_divisiones}
\title{Simular por kernels normales un delito.}
\usage{
simular_delito_divisiones(range_day, df_prop_unidad, df_kernels, ...)
}
\arguments{
\item{range_day}{Día inicial y final, en ese orden. Se aceptan formatos que
puedan ser convertidos a POSIXct, e.g: "2020-01-01" o "01/03/2018".}

\item{df_prop_unidad}{Un \code{data.frame} que contiene la información de
las divisiones administrativas (la columna debe llevar por nombre
NOMBRE_DIV1) y la proporción de delitos cometidos en cada división
(la columna debe llevar por nombre PROP)}

\item{df_kernels}{Un \code{data.frame} que contiene la información de
las divisiones administrativas (la columna debe llevar por nombre
NOMBRE_DIV1), las coordenadas de las medias de los kernels
que deben ser dadas en longitud y latitud. Además, las columnas
que contienen dicha información deben se la segunda y tercera, de
forma respectiva.}

\item{...}{Otros parámetros adicionales a pasar. De usarse se aceptan
matrices de varianzas simuladas \code{var_list} y rango del conteo
de delitos por día \code{ncount_range}. De igual manera se aceptan
\code{data.frames} de dos columnas donde la primera contenga
las categorías/niveles y la segunda las proporciones (PROP), cada
parámetro de información adicional debe iniciar por el nombre
\code{df_prop}.}
}
\value{
Un \code{data.frame} con los campos
\describe{
    \item{LAT}{Latitud del evento.}
    \item{LNG}{Longitud del evento.}
    \item{FECHA}{La fecha "AAAA-MM-DD" del evento.}
}
}
\description{
En esta rutina se simula un delito arbitrario en una ciudad
    que cuenta con divisiones administrativas bien definidas, durante un
    rango de fechas determinado.

    El algoritmo asigna una cantidad aleatoria uniforme de cada delito en
    un día determinado, luego, se reparte la cantidad obtenida entre las
    divisiones definidas para la rutina en función de los pesos asignados
    (deben sumar uno). Dependiendo de lo ingresado por el usuario en
    las medias de los kernels normales para cada división (no puede
    ser el caso que una división con peso diferente de cero no posea por
    lo menos un kernel), se volverá a realizar una repartición entre
    cada una de las posibles distribuciones correspondientes (nuevamente,
    los pesos de los kernels deberán sumar a uno)

    Argumentos opcionales son aceptados para modificar las varianzas y
    el rango de delitos simulados por día.
    TODO: Ejemplos.
}
