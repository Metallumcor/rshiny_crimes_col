% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_models.R
\encoding{UTF-8}
\name{create_split_ts}
\alias{create_split_ts}
\title{Creación de particiones entrenamiento-validación-prueba para
    series de tiempo.}
\usage{
create_split_ts(
  Y,
  X = NULL,
  split_prop = c(0.9, 0.05, 0.05),
  missing_policy = "drop"
)
}
\arguments{
\item{Y}{Un vector que contiene las respuestas.}

\item{X}{Un \code{data.frame}, \code{data.table} o \code{matrix} que guarda
la información de características o predictoras.}

\item{split_prop}{La proporción (tamaños) de cada conjunto, se ingresan en
el orden entrenamiento/validación/prueba. Debe cuidarse que la suma de
exactamente uno.}

\item{missing_policy}{La política de valores faltantes en el conjunto
de validación. Puede ser "drop" para eliminar las observaciones completas
o "stop" para detener el proceso si las detecta.}
}
\value{
Una lista que contiene las particiones de Y y X, si la última es
    proporcionada.
}
\description{
Dado que los paquete \code{caret} y \code{tidymodels} no tiene
    una función nativa para crear particiones completas del conjunto de
    datos en las tres partes mencionadas, se proporciona en este paquete
    una rutina que se ajusta a las necesidades del paquete. Otras
    particiones del tipo rolling window pueden consultarse en los paquetes
    mencionados.

    *Importante:* Se da por hecho que los datos son organizados por una
    columna temporal.

    Asume la existencia de una matriz diseño con factores, es posible que
    algunos niveles no queden representados en los conjuntos de validación
    y prueba, por lo cual se ofrece un **remedio** parcial
    mediante la opción \code{missing_policy}. Lo anterior solo aplica
    al conjunto de validación. Para un manejo adecuado de datos
    de tipo longitudinal se debe usar la función \code{create_split_long}

    TODO: Corregir el problema de faltantes en versiones futuras sin generar
    eliminación de variables. Aumentar el alcance al conjunto de pruebas.
}
\examples{
# Se carga una fraccion de bog_hurto_motos
df_puntos <- bog_hurto_motos \%>\%
    dplyr::filter(CODIGO_DIV1 == "01") \%>\%
    data.table::as.data.table()
# Se agrega por fechas
df_agregado <- df_puntos[,.N,FECHA]
# Definimos Y y X
Y <- df_agregado$N
X <- df_agregado[,-"N"]
# Realizamos la particion
split_ts <- create_split_ts(Y = Y, X = X, split_prop = c(0.6,0.2,0.2))
# Una vista al conjunto de entrenamiento
df_split <- data.frame(Y=split_ts$Y$Y_train,X=split_ts$X$X_train)
utils::head(df_split)
}
